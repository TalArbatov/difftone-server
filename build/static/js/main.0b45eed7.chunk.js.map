{"version":3,"sources":["actions/actionTypes.js","components/CreateQuestionnaire/Option.js","components/CreateQuestionnaire/Question.js","components/CreateQuestionnaire/Title.js","components/CreateQuestionnaire/Questionnaire.js","actions/questionnaireActions.js","components/DisplayQuestionnaire/Questionnaire.js","components/DisplayQuestionnaire/Questionnaires.js","components/DisplayQuestionnaire/Display.js","App.js","reportWebVitals.js","reducers/questionnaire.js","index.js","store.js"],"names":["CREATE_QUESTIONNAIRE","Option","createOption","optionsNum","useState","option","setOption","className","TextField","id","label","variant","onChange","e","target","value","Button","color","onClick","Question","submitQuestion","questionNum","name","setName","options","setOptions","Card","CardContent","length","Title","onTitleChange","connect","dispatch","createQuestionnaire","title","questions","type","payload","createQuestionnaireAction","setTitle","setQuestions","active","content","message","setMessage","style","Typography","gutterBottom","questionnaire","axios","post","then","res","sucess","Questionnaire","map","question","qIndex","ariant","oIndex","Questionnaires","questionnaires","index","prototypes","PropTypes","array","isRequired","Display","setQuestionnaires","useEffect","get","data","App","AppBar","position","Toolbar","IconButton","edge","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","dummy","config","questionnaireReducer","state","action","store","createStore","combineReducers","configStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b45eed7.chunk.js","sourcesContent":["export const CREATE_QUESTIONNAIRE = 'CREATE_QUESTIONNAIRE';\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst Option = ({\n  createOption,\n  optionsNum\n}) => {\n  const [option, setOption] = useState('');\n  const handleOptionCreation = () => {\n    createOption(option);\n    setOption('');\n  };\n  return (\n    <div className=\"option-wrapper\">\n      <TextField id=\"outlined-basic\" className=\"option-input\" label={ `Enter Option (${ optionsNum + 1 })` } variant=\"outlined\" onChange={ e => setOption(e.target.value) } value={ option }/>\n      <Button variant=\"contained\" className=\"add-option-btn\" color=\"grey\" onClick={ handleOptionCreation }>Add</Button>\n    </div>\n  );\n};\n\nOption.propTypes = {\n  createOption: PropTypes.func.isRequired,\n  optionsNum: PropTypes.number.isRequired\n};\n\n export default Option;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Option from './Option';\nimport TextField from '@material-ui/core/TextField';\nimport { Button, CardContent } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nconst Question = ({\n  submitQuestion,\n  questionNum\n}) => {\n  const [name, setName] = useState('');\n  const [options, setOptions] = useState([]);\n\n  const handleQuestionSubmition = () => {\n    submitQuestion(name, options);\n    setName('');\n    setOptions([]);\n  };\n\n  return (\n    <Card className=\"question-wrapper\" variant=\"outlined\">\n      <CardContent>\n        <TextField id=\"outlined-basic\" className=\"question-input\" label={ `Enter Question Name (${ questionNum + 1 })` } variant=\"outlined\" onChange={ e => setName(e.target.value) } value={ name }/>\n        <Option createOption={ option => setOptions([...options, option]) } optionsNum={ options.length }/>\n        <Button className=\"add-question-btn\" variant=\"contained\" color=\"primary\" onClick={ handleQuestionSubmition }>Add Question</Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nQuestion.propTypes = {\n  submitQuestion: PropTypes.func.isRequired,\n  questionNum: PropTypes.number.isRequired\n};\n\n export default Question;","import './Title.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\n// TODO: input validation\nconst Title = ({\n  onTitleChange\n}) => {\n  return (\n    <div className=\"title-wrapper\">\n      <TextField id=\"outlined-basic\" label=\"Enter Questionnaire title\" variant=\"outlined\" onChange={ onTitleChange }/>\n    </div>\n  );\n};\n\nTitle.propTypes = {\n  onTitleChange: PropTypes.func.isRequired\n};\n\n export default Title;","import './Questionnaire.css';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createQuestionnaire as createQuestionnaireAction } from '../../actions/questionnaireActions';\nimport Question from './Question';\nimport Title from './Title';\nimport { Button, CardContent } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios';\n\n// TODO: input validation, message handler\n// TODO: component renders too many times\n// TODO: should be done with Context API instead of Redux (overkill)\n// TODO: refactor filenames (long & confusing names)\n\nconst Questionnaire = ({\n  createQuestionnaire\n}) => {\n  const [title, setTitle] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [message, setMessage] = useState({ active: false, content: '' })\n  const onTitleChange = e => setTitle(e.target.value);\n  const submitQuestion = (name, options) => {\n    setQuestions([...questions, { name, options }]);\n  }\n  const handleQuestionnaireCreation = () => {\n    setMessage({ active: true, content: 'Questionnaire submitted succesfully!' });\n    const questionnaire = { title, questions };\n    axios.post('/questionnaire', questionnaire).then(res => {\n      // TODO: refactor, should send questionnaire complete object\n      res.sucess && createQuestionnaire(title, questions);\n    });\n  }\n\n  return (\n    <Card className=\"questionnaire-wrapper\" variant=\"outlined\">\n      <CardContent>\n        { !message.active ? (\n          <>\n            <Typography color=\"textSecondary\" gutterBottom>Create a Questionnaire </Typography>\n            <Title onTitleChange={ onTitleChange }/>\n            <Question submitQuestion={ (name, options) => submitQuestion(name, options) } questionNum={ questions.length }/>\n            <Button variant=\"contained\" color=\"primary\" onClick={ handleQuestionnaireCreation }>Submit</Button>\n          </>\n        ) : (\n          <p style={ { color: 'green' } }>{ message.content }</p>\n        ) }\n      </CardContent>\n    </Card>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  createQuestionnaire: (title, questions) => dispatch(createQuestionnaireAction(title, questions))\n});\n\nexport default connect(null, mapDispatchToProps)(Questionnaire);\n","import { CREATE_QUESTIONNAIRE } from \"./actionTypes\"\n\nexport const createQuestionnaire = (title, questions) => {\n  return {\n    type: CREATE_QUESTIONNAIRE,\n    payload: {\n      title,\n      questions\n    }\n  }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CardContent } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\n\nconst Questionnaire = ({\n  questionnaire\n}) => {\n  const { title, questions } = questionnaire;\n  return (\n    <Card className=\"display-questionnaire-wrapper\" variant=\"outlined\">\n      <CardContent>\n      <h2>{ title }</h2>\n      { questions.map((question, qIndex) => {\n        return(\n          \n          <Card className=\"display-question-wrapper\" key={ qIndex } ariant=\"outlined\">\n            <CardContent >\n              <h4>#{ qIndex + 1 } {question.name}</h4>\n              { question.options.map((option, oIndex) => {\n                return (\n                  <div key={ oIndex }>\n                    <Typography color=\"textSecondary\" gutterBottom>• { option }</Typography>\n                  </div>\n                );\n              }) }\n            </CardContent>\n          </Card>\n        );\n      }) }\n      </CardContent>\n    </Card>\n  );\n};\n\n// TODO: add PropTypes\n\nexport default Questionnaire;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Questionnaire from './Questionnaire';\n\nconst Questionnaires = ({\n  questionnaires\n}) => {\n  \n  return (\n    <div>\n      { questionnaires.map((questionnaire, index) => (\n        <Questionnaire key={ index } questionnaire={ questionnaire } />\n      )) }\n    </div>\n  );\n};\n\nQuestionnaires.prototypes = {\n  questionnaires: PropTypes.array.isRequired\n};\n\nexport default Questionnaires;","import './Display.css';\nimport React, { useEffect, useState } from 'react';\nimport Questionnaires from './Questionnaires';\nimport axios from 'axios';\n\n// TODO: handle proptypes\nconst Display = () => {\n  const [questionnaires, setQuestionnaires] = useState([]);\n  useEffect(() => {\n    axios.get('/questionnaire').then(res => {\n      setQuestionnaires(res.data);\n    })\n  }, [])\n  return (\n    <div className=\"display-wrapper\">\n      <Questionnaires questionnaires={ questionnaires || [] }/>\n    </div>\n  );\n};\n\n// TODO: add PropTypes\n\n// const mapStateToProps = ({ questionnaire }) => ({\n//   questionnaires: questionnaire.questionnaires\n// });\n\nexport default Display;","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Questionnaire from './components/CreateQuestionnaire/Questionnaire';\nimport Display from './components/DisplayQuestionnaire/Display';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n      <AppBar className=\"app-bar\" position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\">\n            Difftone Questionnaire Assignment\n          </Typography>\n          <div className=\"menu-buttons\">\n            <Button color=\"inherit\"><Link className=\"link\" to='/create'>Create</Link></Button>\n            <Button color=\"inherit\"><Link className=\"link\" to='/display'>Display</Link></Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n        <div className=\"application-wrapper\">\n          <div className=\"application-content\">\n            <Switch>\n              <Route path=\"/create\">\n                <Questionnaire />\n              </Route>\n              <Route path=\"/display\">\n                <Display />\n              </Route>\n              <Route path=\"/\">\n                <Questionnaire />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CREATE_QUESTIONNAIRE } from \"../actions/actionTypes\";\n\nconst defaultState = {\n  dummy: '',\n  questionnaires: [],\n  config: {}\n};\n\nconst questionnaireReducer = (state = defaultState, action) => {\n  switch(action.type) {\n    \n    // TODO: validate deep nesting (via lodash get or .?)\n    case CREATE_QUESTIONNAIRE:\n      return { \n        ...state, \n        questionnaires: [\n          ...state.questionnaires,\n          {\n            title: action.payload.title, \n            questions: action.payload.questions\n          }\n        ]\n      };\n    default:\n      return state;\n  }\n};\n\nexport default questionnaireReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport configStore from './store';\n\nconst store = configStore();\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={ store }>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createStore, combineReducers } from 'redux'\nimport questionnaireReducer from './reducers/questionnaire';\n\nconst configStore = () => createStore(\n  combineReducers({\n    questionnaire: questionnaireReducer\n  })\n);\n\nexport default configStore;"],"sourceRoot":""}